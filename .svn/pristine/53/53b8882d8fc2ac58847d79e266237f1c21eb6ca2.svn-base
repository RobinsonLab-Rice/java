package model.tasks.basictasks;

import java.io.OutputStream;

import model.plate.objects.ArmState;
import model.tasks.ITaskVisitor;

/**
 * Dispense task, tells the robot to dispense the input amount of liquid.
 * @author Christian
 */
public class DispenseTask extends ASerialTask {

	private double volume;
	
	/**
	 * Constructor, just sets the appropriate volume.
	 * @param inputVolume - amount of volume to fill associated well with
	 */
	public DispenseTask(Double volume){
		this.volume = volume;
	}

	public void execute(ArmState armState, OutputStream outputStream) {
		String cmdString = "dispense(" + volume + "," + "10000" + ")";
		this.writeString(cmdString, outputStream);
	}
	
	/**
	 * Calls the "Dispense" case of the given algo.
	 * @param algo The IPhraseVisitor algo to use.
	 * @param params vararg list of input parameters
	 * @return the result of running the Chord case of the visitor.
	 */
	@Override
	public Object executeVisitor(ITaskVisitor algo, Object... params) {
	    return algo.caseAt("Dispense", this, params);
	}
}
